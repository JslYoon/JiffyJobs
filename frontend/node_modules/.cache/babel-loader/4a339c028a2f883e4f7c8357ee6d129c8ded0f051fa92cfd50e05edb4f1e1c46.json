{"ast":null,"code":"var _jsxFileName = \"/Users/annieliang/Desktop/DT/JiffyJobs/frontend/src/pages/JobBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, Typography, Divider, Pagination } from '@mui/material';\nimport dayjs from 'dayjs';\nimport { Filter } from '../components/Filter';\nimport { Sort } from '../components/Sort';\nimport { JobPosting } from '../components/JobPosting';\nimport { JobCards } from '../components/JobCards';\nimport { CongratsPopup } from '../components/CongratsPopup';\nimport { SubmitProfilePopup } from '../components/SubmitPopup';\nimport { JobPopup } from '../components/JobPopup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function JobBoard() {\n  _s();\n  const [jobData, setJobData] = useState([]);\n  const [rawData, setRawData] = useState([]);\n  const [size, setSize] = useState(0);\n  const [background, setBackground] = useState(\"\");\n  const {\n    render,\n    filterList\n  } = Filter();\n  const [openPop, setOpenPop] = useState(false);\n  const [currentPop, setCurrentPop] = useState([]);\n  const [profile, setProfile] = useState([]);\n  const [gotProfile, setGotProfile] = useState(false);\n  const [page, setPage] = useState(1);\n  const cardsPerPage = 20;\n  const totalCards = jobData.length;\n  const totalPages = Math.ceil(totalCards / cardsPerPage);\n  const [openSubmitProfile, setOpenSubmitProfile] = useState(false);\n  const [openCongratsPopup, setOpenCongratsPopup] = useState(false);\n  const [isJobSaved, setIsJobSaved] = useState({});\n  const [userEmail, setUserEmail] = useState(localStorage.getItem(\"email\"));\n  const [userRole, setUserRole] = useState(localStorage.getItem(\"user\"));\n  const navigate = useNavigate();\n\n  // whenever user clicks the search button, gets directed to here\n  const handleJobPostingData = data => {\n    if (!data) {\n      data = \" \";\n    }\n    const route = `http://localhost:4000/api/jobs/search/${data}/prop`;\n    fetch(route).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      setRawData(data);\n      const newJobData = data.map(function (obj) {\n        return [[obj._id, obj.title], [randomImage(obj.categories.toString().split(\",\")[0]), obj.job_poster], [\"\", obj.location], [\"\", obj.pay], [\"\", obj.description], [\"\", dayjs(new Date(obj.time[0])).format('MM/DD/YY h:mm A') + \" \" + \" - \" + dayjs(new Date(obj.time[1])).format('h:mm A')], [\"\", obj.categories.toString()]];\n      });\n      setJobData(newJobData);\n      setSize(jobData.length);\n      if (size <= 4) {\n        setBackground(\"1\");\n      } else {\n        setBackground(\"\");\n      }\n      const savedStatus = {};\n      data.forEach(job => {\n        savedStatus[job.id] = false;\n      });\n      setIsJobSaved(savedStatus);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  // random image for category\n  const randomImage = seed => {\n    return `https://source.unsplash.com/random?${seed}`;\n  };\n\n  // handles getting all jobs\n  useEffect(() => {\n    async function GetAllJobs() {\n      const route = \"https://jiffyjobs-api-production.up.railway.app/api/jobs/get\";\n      fetch(route).then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      }).then(data => {\n        const sortedData = data.sort((a, b) => {\n          const startTimeA = dayjs(a.time[0]);\n          const startTimeB = dayjs(b.time[0]);\n          if (!startTimeA.isValid()) return 1;\n          if (!startTimeB.isValid()) return -1;\n          return startTimeA.isAfter(startTimeB) ? 1 : -1;\n        });\n        setRawData(data);\n        const newJobData = data.map(function (obj) {\n          console.log(obj.time);\n          return [[obj._id, obj.title], [randomImage(obj.categories.toString().split(\",\")[0]), obj.job_poster], [\"\", obj.location], [\"\", obj.pay], [\"\", obj.description], [\"\", dayjs(new Date(obj.time[0])).format('MM/DD/YY h:mm A') + \" \" + \" - \" + dayjs(new Date(obj.time[1])).format('h:mm A')], [\"\", obj.categories.toString()]];\n        });\n        setJobData(newJobData);\n        const newSize = newJobData.length;\n        setSize(newSize);\n        if (newSize <= 4) {\n          setBackground(\"1\");\n        } else {\n          setBackground(\"\");\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n    if (filterList.size === 0) {\n      GetAllJobs();\n    }\n  }, [filterList]);\n\n  // handles filtering job\n  useEffect(() => {\n    console.log(filterList);\n    async function FilterJobs() {\n      const requestOptions = {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      var route = \"https://jiffyjobs-api-production.up.railway.app/api/jobs/filter\";\n      var query = \"/*/*/\" + Array.from(filterList) + \"/*/*\";\n      console.log(query);\n      route = route + query;\n      console.log(route);\n      fetch(route, requestOptions).then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      }).then(data => {\n        setRawData(data);\n        const newJobData = data.map(function (obj) {\n          return [[obj._id, obj.title], [randomImage(obj.categories.toString().split(\",\")[0]), obj.job_poster], [\"\", obj.location], [\"\", obj.pay], [\"\", obj.description], [\"\", dayjs(new Date(obj.time[0])).format('MM/DD/YY h:mm A') + \" \" + \" - \" + dayjs(new Date(obj.time[1])).format('h:mm A')], [\"\", obj.categories.toString()]];\n        });\n        setJobData(newJobData);\n        setSize(jobData.length);\n        if (size <= 4) {\n          setBackground(\"1\");\n        } else {\n          setBackground(\"\");\n        }\n        const savedStatus = {};\n        data.forEach(job => {\n          savedStatus[job.id] = false;\n        });\n        setIsJobSaved(savedStatus);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n    if (filterList.size !== 0) {\n      setJobData([]);\n      FilterJobs();\n    }\n  }, [filterList]);\n\n  // close popup\n  const closePop = () => {\n    setOpenPop(false);\n  };\n\n  // open popup\n  const openPopUp = key => {\n    if (!userEmail) {\n      toast.dismiss();\n      console.log(\"here\");\n      toast.error('Please login to view!', {\n        position: \"top-center\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"light\"\n      });\n    } else {\n      setCurrentPop(key);\n      console.log(currentPop);\n      setOpenPop(true);\n    }\n  };\n\n  // open submit profile popup\n  const handleOpenSubmitProfile = () => {\n    if (userRole === 'provider') {\n      toast.dismiss();\n      toast.error('You can only apply as a Seeker!', {\n        position: \"top-center\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"light\"\n      });\n    } else if (!gotProfile) {\n      const requestedOptions = {\n        method: \"GET\",\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      const route = `https://jiffyjobs-api-production.up.railway.app/api/users/getinfo/${userEmail}/${userRole}`;\n      fetch(route, requestedOptions).then(async response => {\n        const res = await response.json();\n        if (!response.ok) {\n          throw new Error(res.message);\n        }\n        return res;\n      }).then(data => {\n        const user = [data.personal_info.first_name, data.personal_info.last_name, data.personal_info.school, data.personal_info.major, data.personal_info.grade, data.personal_info.personal_statement[0]];\n        setProfile(user);\n        console.log(profile);\n        setOpenSubmitProfile(true);\n        setGotProfile(true);\n      });\n    } else {\n      setOpenSubmitProfile(true);\n    }\n  };\n\n  // close submit profile popup\n  const handleCloseSubmitProfile = () => {\n    setOpenSubmitProfile(false);\n  };\n  const handleSubmitProfile = () => {\n    const user = {\n      method: \"PUT\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        seeker_email: userEmail,\n        job_id: currentPop[0][0]\n      })\n    };\n    const route = \"https://jiffyjobs-api-production.up.railway.app/api/users/apply\";\n    fetch(route, user).then(async response => {\n      const res = await response.json();\n      if (!response.ok) {\n        throw new Error(res.message);\n      }\n      return res;\n    }).then(data => {\n      handleCloseSubmitProfile();\n      setOpenCongratsPopup(true);\n    }).catch(error => {\n      const err = error.message;\n      if (err.startsWith('Error: ')) {\n        alert(err.slice(7));\n        toast.error(err.slice(7), {\n          position: \"top-center\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: \"light\"\n        });\n      } else {\n        toast.error(err, {\n          position: \"top-center\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: \"light\"\n        });\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `outerCard2 ${openPop ? 'blur-background' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(JobPosting, {\n      onJobDataSubmit: handleJobPostingData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"job-table-box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job-table-inner\",\n        style: {\n          paddingTop: '50px',\n          width: '1136px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            fontFamily: 'Outfit',\n            fontSize: '20px',\n            justifyContent: 'center',\n            alignItems: 'center',\n            textAlign: 'start'\n          },\n          children: \"Job Board\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"job-table-box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'flex-start',\n            width: '1136px'\n          },\n          children: [render, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Sort, {\n              rawData: rawData,\n              setRawData: setRawData,\n              setJobData: setJobData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          width: \"1136px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(JobCards, {\n      jobData: jobData,\n      page: page,\n      cardsPerPage: cardsPerPage,\n      openPopUp: openPopUp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        padding: '1%',\n        fontFamily: 'Outfit',\n        fontSize: '14px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Pagination, {\n        count: totalPages,\n        page: page,\n        onChange: (event, value) => setPage(value),\n        className: \"custom-pagination\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 13\n    }, this), openSubmitProfile && /*#__PURE__*/_jsxDEV(SubmitProfilePopup, {\n      open: openSubmitProfile,\n      onClose: handleCloseSubmitProfile,\n      onSubmit: handleSubmitProfile,\n      profile: profile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 36\n    }, this), openCongratsPopup && /*#__PURE__*/_jsxDEV(CongratsPopup, {\n      open: openCongratsPopup,\n      onClose: () => setOpenCongratsPopup(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 36\n    }, this), openPop && /*#__PURE__*/_jsxDEV(JobPopup, {\n      open: openPop,\n      onClose: closePop,\n      openPopUp: openPopUp,\n      currentPop: currentPop,\n      openSubmitProfile: openSubmitProfile,\n      openCongratsPopup: openCongratsPopup,\n      openSubmit: handleOpenSubmitProfile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 316,\n    columnNumber: 9\n  }, this);\n}\n_s(JobBoard, \"0ItVY6MYrHC2xnCoIfgzt4nWT/8=\", false, function () {\n  return [useNavigate];\n});\n_c = JobBoard;\nvar _c;\n$RefreshReg$(_c, \"JobBoard\");","map":{"version":3,"names":["React","useEffect","useState","ToastContainer","toast","useNavigate","Box","Typography","Divider","Pagination","dayjs","Filter","Sort","JobPosting","JobCards","CongratsPopup","SubmitProfilePopup","JobPopup","jsxDEV","_jsxDEV","JobBoard","_s","jobData","setJobData","rawData","setRawData","size","setSize","background","setBackground","render","filterList","openPop","setOpenPop","currentPop","setCurrentPop","profile","setProfile","gotProfile","setGotProfile","page","setPage","cardsPerPage","totalCards","length","totalPages","Math","ceil","openSubmitProfile","setOpenSubmitProfile","openCongratsPopup","setOpenCongratsPopup","isJobSaved","setIsJobSaved","userEmail","setUserEmail","localStorage","getItem","userRole","setUserRole","navigate","handleJobPostingData","data","route","fetch","then","response","ok","Error","json","newJobData","map","obj","_id","title","randomImage","categories","toString","split","job_poster","location","pay","description","Date","time","format","savedStatus","forEach","job","id","catch","error","console","log","seed","GetAllJobs","sortedData","sort","a","b","startTimeA","startTimeB","isValid","isAfter","newSize","FilterJobs","requestOptions","method","headers","query","Array","from","closePop","openPopUp","key","dismiss","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","handleOpenSubmitProfile","requestedOptions","res","message","user","personal_info","first_name","last_name","school","major","grade","personal_statement","handleCloseSubmitProfile","handleSubmitProfile","body","JSON","stringify","seeker_email","job_id","err","startsWith","alert","slice","className","children","onJobDataSubmit","fileName","_jsxFileName","lineNumber","columnNumber","style","paddingTop","width","fontFamily","fontSize","justifyContent","alignItems","textAlign","display","padding","count","onChange","event","value","open","onClose","onSubmit","openSubmit","_c","$RefreshReg$"],"sources":["/Users/annieliang/Desktop/DT/JiffyJobs/frontend/src/pages/JobBoard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\n\nimport { Box, Typography, Divider, Pagination } from '@mui/material';\n\nimport dayjs from 'dayjs';\n\nimport { Filter } from '../components/Filter';\nimport { Sort } from '../components/Sort';\nimport { JobPosting } from '../components/JobPosting';\nimport { JobCards } from '../components/JobCards';\nimport { CongratsPopup } from '../components/CongratsPopup';\nimport { SubmitProfilePopup } from '../components/SubmitPopup';\nimport { JobPopup } from '../components/JobPopup';\n\nexport function JobBoard() {\n    const [jobData, setJobData] = useState([])\n    const [rawData, setRawData] = useState([]);\n    const [size, setSize] = useState(0)\n    const [background, setBackground] = useState(\"\")\n    const { render, filterList } = Filter()\n    const [openPop, setOpenPop] = useState(false)\n    const [currentPop, setCurrentPop] = useState([])\n    const [profile, setProfile] = useState([])\n    const [gotProfile, setGotProfile] = useState(false);\n\n    const [page, setPage] = useState(1);\n    const cardsPerPage = 20;\n    const totalCards = jobData.length;\n    const totalPages = Math.ceil(totalCards / cardsPerPage);\n\n    const [openSubmitProfile, setOpenSubmitProfile] = useState(false);\n    const [openCongratsPopup, setOpenCongratsPopup] = useState(false);\n\n    const [isJobSaved, setIsJobSaved] = useState({});\n\n    const [ userEmail, setUserEmail ] = useState(localStorage.getItem(\"email\"));\n    const [ userRole, setUserRole ] = useState(localStorage.getItem(\"user\"));\n\n    const navigate = useNavigate();\n\n    // whenever user clicks the search button, gets directed to here\n    const handleJobPostingData = (data) => {\n        if (!data) {\n            data = \" \";\n        }\n        const route = `http://localhost:4000/api/jobs/search/${data}/prop`;\n        fetch(route)\n            .then((response) => {\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n                return response.json();\n            })\n            .then((data) => {\n                setRawData(data);\n                const newJobData = data.map(function(obj) {\n                    return [[obj._id, obj.title], [randomImage(obj.categories.toString().split(\",\")[0]), obj.job_poster], [\"\", obj.location], [\"\", obj.pay], [\"\", obj.description], [\"\", dayjs(new Date(obj.time[0])).format('MM/DD/YY h:mm A')  + \" \" + \" - \" + dayjs(new Date(obj.time[1])).format('h:mm A')], [\"\", obj.categories.toString()]]\n                });\n                setJobData(newJobData);\n                setSize(jobData.length)\n\n                if (size <= 4) {\n                    setBackground(\"1\")\n                } else {\n                    setBackground(\"\")\n                }\n\n                const savedStatus = {};\n             data.forEach(job => {\n                 savedStatus[job.id] = false; \n             });\n            setIsJobSaved(savedStatus);\n            })\n            .catch((error) => {\n                console.log(error)\n            })\n    };\n\n    // random image for category\n    const randomImage = (seed) => {\n        return `https://source.unsplash.com/random?${seed}`;\n    };\n\n\n    // handles getting all jobs\n    useEffect(() => {\n        async function GetAllJobs() {\n            const route = \"https://jiffyjobs-api-production.up.railway.app/api/jobs/get\"\n            fetch(route)\n                .then((response) => {\n                    if (!response.ok) {\n                        throw new Error('Network response was not ok');\n                    }\n                    return response.json();\n                })\n                .then((data) => {\n                    const sortedData = data.sort((a, b) => {\n                        const startTimeA = dayjs(a.time[0]);\n                        const startTimeB = dayjs(b.time[0]);\n                        \n                        if (!startTimeA.isValid()) return 1;\n                        if (!startTimeB.isValid()) return -1;\n                        \n                        return startTimeA.isAfter(startTimeB) ? 1 : -1;\n                    });\n                    \n                    setRawData(data);\n                    const newJobData = data.map(function(obj) {\n                        console.log(obj.time)\n                        return [[obj._id, obj.title], [randomImage(obj.categories.toString().split(\",\")[0]), obj.job_poster], [\"\", obj.location], [\"\", obj.pay], [\"\", obj.description], [\"\", dayjs(new Date(obj.time[0])).format('MM/DD/YY h:mm A')  + \" \" + \" - \" + dayjs(new Date(obj.time[1])).format('h:mm A')], [\"\", obj.categories.toString()]]\n                    });\n                    setJobData(newJobData);\n\n                    const newSize = newJobData.length;\n                    setSize(newSize);\n\n                    if (newSize <= 4) {\n                        setBackground(\"1\")\n                    } else {\n                        setBackground(\"\")\n                    }\n                })\n                .catch((error) => {\n                    console.log(error)\n                })\n        }\n        if (filterList.size === 0) {\n            GetAllJobs()\n        }\n    }, [filterList]);\n    \n\n    // handles filtering job\n    useEffect(() => {\n        console.log(filterList)\n        async function FilterJobs() {\n            const requestOptions = {\n                method: 'GET',\n                headers: { 'Content-Type': 'application/json' }\n            }\n            var route = \"https://jiffyjobs-api-production.up.railway.app/api/jobs/filter\"\n            var query = \"/*/*/\" + Array.from(filterList) + \"/*/*\"\n            console.log(query)\n            route = route + query\n            console.log(route)\n            fetch(route, requestOptions)\n                .then((response) => {\n                    if (!response.ok) { \n                        throw new Error('Network response was not ok');\n                    }\n                    return response.json();\n                })\n                .then((data) => {\n                    setRawData(data);\n                    const newJobData = data.map(function(obj) {\n                        return [[obj._id, obj.title], [randomImage(obj.categories.toString().split(\",\")[0]), obj.job_poster], [\"\", obj.location], [\"\", obj.pay], [\"\", obj.description], [\"\", dayjs(new Date(obj.time[0])).format('MM/DD/YY h:mm A')  + \" \" + \" - \" + dayjs(new Date(obj.time[1])).format('h:mm A')], [\"\", obj.categories.toString()]]\n                    });\n                    setJobData(newJobData);\n                    setSize(jobData.length)\n\n                    if (size <= 4) {\n                        setBackground(\"1\")\n                    } else {\n                        setBackground(\"\")\n                    }\n\n                    const savedStatus = {};\n                 data.forEach(job => {\n                     savedStatus[job.id] = false; \n                 });\n                setIsJobSaved(savedStatus);\n                })\n                .catch((error) => {\n                    console.log(error)\n                }\n            )\n        }\n        \n        if (filterList.size !== 0) {\n            setJobData([])\n            FilterJobs()\n        }\n\n    }, [filterList])\n\n    // close popup\n    const closePop = () => {\n        setOpenPop(false);\n    }\n    \n    // open popup\n    const openPopUp = (key) => {\n        if (!userEmail) {\n            toast.dismiss()\n            console.log(\"here\")\n            toast.error('Please login to view!', {\n                position: \"top-center\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n                theme: \"light\",\n            });\n        } else {\n            setCurrentPop(key);\n            console.log(currentPop);\n            setOpenPop(true);\n        }\n    }\n\n    // open submit profile popup\n    const handleOpenSubmitProfile = () => {\n        if (userRole === 'provider') {\n            toast.dismiss()\n            toast.error('You can only apply as a Seeker!', {\n                position: \"top-center\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n                theme: \"light\",\n            });\n        } else if (!gotProfile) {\n            const requestedOptions = {\n                method: \"GET\",\n                headers: { 'Content-Type': 'application/json' },\n            }\n    \n            const route = `https://jiffyjobs-api-production.up.railway.app/api/users/getinfo/${userEmail}/${userRole}`;\n            fetch(route, requestedOptions)\n            .then(async (response) => {\n                const res = await response.json()\n                if (!response.ok) {\n                    throw new Error(res.message);\n                }\n                return res;\n            })\n            .then((data) => {\n                const user = [data.personal_info.first_name, data.personal_info.last_name, data.personal_info.school, data.personal_info.major, data.personal_info.grade, data.personal_info.personal_statement[0]];\n                setProfile(user);\n                console.log(profile);\n                setOpenSubmitProfile(true);\n                setGotProfile(true);\n            })\n        } else {\n            setOpenSubmitProfile(true);\n        }\n    };\n\n    // close submit profile popup\n    const handleCloseSubmitProfile = () => {\n        setOpenSubmitProfile(false);\n    };\n\n\n    const handleSubmitProfile = () => {\n        const user = {\n            method: \"PUT\",\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                seeker_email: userEmail,\n                job_id: currentPop[0][0]\n            })\n        }\n\n        const route = \"https://jiffyjobs-api-production.up.railway.app/api/users/apply\";\n        fetch(route, user)\n        .then(async (response) => {\n            const res = await response.json()\n            if (!response.ok) {\n                throw new Error(res.message);\n            } \n            return res;\n        })\n        .then((data) => {\n            handleCloseSubmitProfile();\n            setOpenCongratsPopup(true);\n        })\n        .catch((error) => {\n            const err = error.message;\n            if (err.startsWith('Error: ')) {\n                alert(err.slice(7));\n                toast.error(err.slice(7), {\n                    position: \"top-center\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                    theme: \"light\"\n                });\n            } else {\n                toast.error(err, {\n                    position: \"top-center\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                    theme: \"light\"\n                });\n            }\n        });\n\n    };\n    \n    return (\n        <div className={`outerCard2 ${openPop ? 'blur-background' : ''}`}>\n            <JobPosting onJobDataSubmit={handleJobPostingData} /> \n            <Box className='job-table-box'>\n                <div className='job-table-inner' style={{ paddingTop: '50px', width: '1136px'}}>\n                    <Typography style={{fontFamily: 'Outfit', fontSize: '20px', justifyContent: 'center', alignItems: 'center', textAlign: 'start'}}>\n                        Job Board \n                    </Typography>\n                </div>\n            </Box>\n            <Box className='job-table-box'>\n                <div style={{display: 'grid', justifyContent: 'center', alignItems: 'center',}}>\n                    <div style={{ display: 'flex', justifyContent: 'flex-start', width: '1136px', }}>\n                        { render }\n                        <div>\n                            <Sort rawData={rawData} setRawData={setRawData} setJobData={setJobData} />\n                        </div>\n                    </div>\n                    <Divider width='1136px'/>\n                </div>\n                {/* <button onClick={handleLogJobData}>Log Job Data</button> */}\n            </Box>\n            <JobCards jobData={jobData} page={page} cardsPerPage={cardsPerPage} openPopUp={openPopUp}/>\n            <div style={{ display: 'flex', justifyContent: 'center', padding: '1%', fontFamily: 'Outfit', fontSize: '14px' }}>\n                <Pagination count={totalPages} page={page} onChange={(event, value) => setPage(value)}  className=\"custom-pagination\" />\n            </div>\n            {openSubmitProfile && (<SubmitProfilePopup open={openSubmitProfile} onClose={handleCloseSubmitProfile} onSubmit={handleSubmitProfile} profile={profile}/>)}\n            {openCongratsPopup && (<CongratsPopup open={openCongratsPopup} onClose={() => setOpenCongratsPopup(false)} />)}\n            {openPop && (<JobPopup open={openPop} onClose={closePop} openPopUp={openPopUp} currentPop={currentPop} openSubmitProfile={openSubmitProfile} openCongratsPopup={openCongratsPopup} openSubmit={handleOpenSubmitProfile} />)}\n        </div>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,cAAc,EAAEC,KAAK,QAAQ,gBAAgB;AACtD,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,SAASC,GAAG,EAAEC,UAAU,EAAEC,OAAO,EAAEC,UAAU,QAAQ,eAAe;AAEpE,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,SAASC,IAAI,QAAQ,oBAAoB;AACzC,SAASC,UAAU,QAAQ,0BAA0B;AACrD,SAASC,QAAQ,QAAQ,wBAAwB;AACjD,SAASC,aAAa,QAAQ,6BAA6B;AAC3D,SAASC,kBAAkB,QAAQ,2BAA2B;AAC9D,SAASC,QAAQ,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,OAAO,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACsB,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACwB,IAAI,EAAEC,OAAO,CAAC,GAAGzB,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAAC0B,UAAU,EAAEC,aAAa,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM;IAAE4B,MAAM;IAAEC;EAAW,CAAC,GAAGpB,MAAM,CAAC,CAAC;EACvC,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAG/B,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACgC,UAAU,EAAEC,aAAa,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACkC,OAAO,EAAEC,UAAU,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACoC,UAAU,EAAEC,aAAa,CAAC,GAAGrC,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAM,CAACsC,IAAI,EAAEC,OAAO,CAAC,GAAGvC,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAMwC,YAAY,GAAG,EAAE;EACvB,MAAMC,UAAU,GAAGrB,OAAO,CAACsB,MAAM;EACjC,MAAMC,UAAU,GAAGC,IAAI,CAACC,IAAI,CAACJ,UAAU,GAAGD,YAAY,CAAC;EAEvD,MAAM,CAACM,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG/C,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACgD,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGjD,QAAQ,CAAC,KAAK,CAAC;EAEjE,MAAM,CAACkD,UAAU,EAAEC,aAAa,CAAC,GAAGnD,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEhD,MAAM,CAAEoD,SAAS,EAAEC,YAAY,CAAE,GAAGrD,QAAQ,CAACsD,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EAC3E,MAAM,CAAEC,QAAQ,EAAEC,WAAW,CAAE,GAAGzD,QAAQ,CAACsD,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EAExE,MAAMG,QAAQ,GAAGvD,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMwD,oBAAoB,GAAIC,IAAI,IAAK;IACnC,IAAI,CAACA,IAAI,EAAE;MACPA,IAAI,GAAG,GAAG;IACd;IACA,MAAMC,KAAK,GAAI,yCAAwCD,IAAK,OAAM;IAClEE,KAAK,CAACD,KAAK,CAAC,CACPE,IAAI,CAAEC,QAAQ,IAAK;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDJ,IAAI,CAAEH,IAAI,IAAK;MACZrC,UAAU,CAACqC,IAAI,CAAC;MAChB,MAAMQ,UAAU,GAAGR,IAAI,CAACS,GAAG,CAAC,UAASC,GAAG,EAAE;QACtC,OAAO,CAAC,CAACA,GAAG,CAACC,GAAG,EAAED,GAAG,CAACE,KAAK,CAAC,EAAE,CAACC,WAAW,CAACH,GAAG,CAACI,UAAU,CAACC,QAAQ,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEN,GAAG,CAACO,UAAU,CAAC,EAAE,CAAC,EAAE,EAAEP,GAAG,CAACQ,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAER,GAAG,CAACS,GAAG,CAAC,EAAE,CAAC,EAAE,EAAET,GAAG,CAACU,WAAW,CAAC,EAAE,CAAC,EAAE,EAAExE,KAAK,CAAC,IAAIyE,IAAI,CAACX,GAAG,CAACY,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,MAAM,CAAC,iBAAiB,CAAC,GAAI,GAAG,GAAG,KAAK,GAAG3E,KAAK,CAAC,IAAIyE,IAAI,CAACX,GAAG,CAACY,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,EAAEb,GAAG,CAACI,UAAU,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC;MACjU,CAAC,CAAC;MACFtD,UAAU,CAAC+C,UAAU,CAAC;MACtB3C,OAAO,CAACL,OAAO,CAACsB,MAAM,CAAC;MAEvB,IAAIlB,IAAI,IAAI,CAAC,EAAE;QACXG,aAAa,CAAC,GAAG,CAAC;MACtB,CAAC,MAAM;QACHA,aAAa,CAAC,EAAE,CAAC;MACrB;MAEA,MAAMyD,WAAW,GAAG,CAAC,CAAC;MACzBxB,IAAI,CAACyB,OAAO,CAACC,GAAG,IAAI;QAChBF,WAAW,CAACE,GAAG,CAACC,EAAE,CAAC,GAAG,KAAK;MAC/B,CAAC,CAAC;MACHpC,aAAa,CAACiC,WAAW,CAAC;IAC1B,CAAC,CAAC,CACDI,KAAK,CAAEC,KAAK,IAAK;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB,CAAC,CAAC;EACV,CAAC;;EAED;EACA,MAAMhB,WAAW,GAAImB,IAAI,IAAK;IAC1B,OAAQ,sCAAqCA,IAAK,EAAC;EACvD,CAAC;;EAGD;EACA7F,SAAS,CAAC,MAAM;IACZ,eAAe8F,UAAUA,CAAA,EAAG;MACxB,MAAMhC,KAAK,GAAG,8DAA8D;MAC5EC,KAAK,CAACD,KAAK,CAAC,CACPE,IAAI,CAAEC,QAAQ,IAAK;QAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAClD;QACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAC1B,CAAC,CAAC,CACDJ,IAAI,CAAEH,IAAI,IAAK;QACZ,MAAMkC,UAAU,GAAGlC,IAAI,CAACmC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;UACnC,MAAMC,UAAU,GAAG1F,KAAK,CAACwF,CAAC,CAACd,IAAI,CAAC,CAAC,CAAC,CAAC;UACnC,MAAMiB,UAAU,GAAG3F,KAAK,CAACyF,CAAC,CAACf,IAAI,CAAC,CAAC,CAAC,CAAC;UAEnC,IAAI,CAACgB,UAAU,CAACE,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC;UACnC,IAAI,CAACD,UAAU,CAACC,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;UAEpC,OAAOF,UAAU,CAACG,OAAO,CAACF,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAClD,CAAC,CAAC;QAEF5E,UAAU,CAACqC,IAAI,CAAC;QAChB,MAAMQ,UAAU,GAAGR,IAAI,CAACS,GAAG,CAAC,UAASC,GAAG,EAAE;UACtCoB,OAAO,CAACC,GAAG,CAACrB,GAAG,CAACY,IAAI,CAAC;UACrB,OAAO,CAAC,CAACZ,GAAG,CAACC,GAAG,EAAED,GAAG,CAACE,KAAK,CAAC,EAAE,CAACC,WAAW,CAACH,GAAG,CAACI,UAAU,CAACC,QAAQ,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEN,GAAG,CAACO,UAAU,CAAC,EAAE,CAAC,EAAE,EAAEP,GAAG,CAACQ,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAER,GAAG,CAACS,GAAG,CAAC,EAAE,CAAC,EAAE,EAAET,GAAG,CAACU,WAAW,CAAC,EAAE,CAAC,EAAE,EAAExE,KAAK,CAAC,IAAIyE,IAAI,CAACX,GAAG,CAACY,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,MAAM,CAAC,iBAAiB,CAAC,GAAI,GAAG,GAAG,KAAK,GAAG3E,KAAK,CAAC,IAAIyE,IAAI,CAACX,GAAG,CAACY,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,EAAEb,GAAG,CAACI,UAAU,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACjU,CAAC,CAAC;QACFtD,UAAU,CAAC+C,UAAU,CAAC;QAEtB,MAAMkC,OAAO,GAAGlC,UAAU,CAAC1B,MAAM;QACjCjB,OAAO,CAAC6E,OAAO,CAAC;QAEhB,IAAIA,OAAO,IAAI,CAAC,EAAE;UACd3E,aAAa,CAAC,GAAG,CAAC;QACtB,CAAC,MAAM;UACHA,aAAa,CAAC,EAAE,CAAC;QACrB;MACJ,CAAC,CAAC,CACD6D,KAAK,CAAEC,KAAK,IAAK;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACtB,CAAC,CAAC;IACV;IACA,IAAI5D,UAAU,CAACL,IAAI,KAAK,CAAC,EAAE;MACvBqE,UAAU,CAAC,CAAC;IAChB;EACJ,CAAC,EAAE,CAAChE,UAAU,CAAC,CAAC;;EAGhB;EACA9B,SAAS,CAAC,MAAM;IACZ2F,OAAO,CAACC,GAAG,CAAC9D,UAAU,CAAC;IACvB,eAAe0E,UAAUA,CAAA,EAAG;MACxB,MAAMC,cAAc,GAAG;QACnBC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB;MAClD,CAAC;MACD,IAAI7C,KAAK,GAAG,iEAAiE;MAC7E,IAAI8C,KAAK,GAAG,OAAO,GAAGC,KAAK,CAACC,IAAI,CAAChF,UAAU,CAAC,GAAG,MAAM;MACrD6D,OAAO,CAACC,GAAG,CAACgB,KAAK,CAAC;MAClB9C,KAAK,GAAGA,KAAK,GAAG8C,KAAK;MACrBjB,OAAO,CAACC,GAAG,CAAC9B,KAAK,CAAC;MAClBC,KAAK,CAACD,KAAK,EAAE2C,cAAc,CAAC,CACvBzC,IAAI,CAAEC,QAAQ,IAAK;QAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAClD;QACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAC1B,CAAC,CAAC,CACDJ,IAAI,CAAEH,IAAI,IAAK;QACZrC,UAAU,CAACqC,IAAI,CAAC;QAChB,MAAMQ,UAAU,GAAGR,IAAI,CAACS,GAAG,CAAC,UAASC,GAAG,EAAE;UACtC,OAAO,CAAC,CAACA,GAAG,CAACC,GAAG,EAAED,GAAG,CAACE,KAAK,CAAC,EAAE,CAACC,WAAW,CAACH,GAAG,CAACI,UAAU,CAACC,QAAQ,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEN,GAAG,CAACO,UAAU,CAAC,EAAE,CAAC,EAAE,EAAEP,GAAG,CAACQ,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAER,GAAG,CAACS,GAAG,CAAC,EAAE,CAAC,EAAE,EAAET,GAAG,CAACU,WAAW,CAAC,EAAE,CAAC,EAAE,EAAExE,KAAK,CAAC,IAAIyE,IAAI,CAACX,GAAG,CAACY,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,MAAM,CAAC,iBAAiB,CAAC,GAAI,GAAG,GAAG,KAAK,GAAG3E,KAAK,CAAC,IAAIyE,IAAI,CAACX,GAAG,CAACY,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,EAAEb,GAAG,CAACI,UAAU,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACjU,CAAC,CAAC;QACFtD,UAAU,CAAC+C,UAAU,CAAC;QACtB3C,OAAO,CAACL,OAAO,CAACsB,MAAM,CAAC;QAEvB,IAAIlB,IAAI,IAAI,CAAC,EAAE;UACXG,aAAa,CAAC,GAAG,CAAC;QACtB,CAAC,MAAM;UACHA,aAAa,CAAC,EAAE,CAAC;QACrB;QAEA,MAAMyD,WAAW,GAAG,CAAC,CAAC;QACzBxB,IAAI,CAACyB,OAAO,CAACC,GAAG,IAAI;UAChBF,WAAW,CAACE,GAAG,CAACC,EAAE,CAAC,GAAG,KAAK;QAC/B,CAAC,CAAC;QACHpC,aAAa,CAACiC,WAAW,CAAC;MAC1B,CAAC,CAAC,CACDI,KAAK,CAAEC,KAAK,IAAK;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACtB,CACJ,CAAC;IACL;IAEA,IAAI5D,UAAU,CAACL,IAAI,KAAK,CAAC,EAAE;MACvBH,UAAU,CAAC,EAAE,CAAC;MACdkF,UAAU,CAAC,CAAC;IAChB;EAEJ,CAAC,EAAE,CAAC1E,UAAU,CAAC,CAAC;;EAEhB;EACA,MAAMiF,QAAQ,GAAGA,CAAA,KAAM;IACnB/E,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC;;EAED;EACA,MAAMgF,SAAS,GAAIC,GAAG,IAAK;IACvB,IAAI,CAAC5D,SAAS,EAAE;MACZlD,KAAK,CAAC+G,OAAO,CAAC,CAAC;MACfvB,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACnBzF,KAAK,CAACuF,KAAK,CAAC,uBAAuB,EAAE;QACjCyB,QAAQ,EAAE,YAAY;QACtBC,SAAS,EAAE,IAAI;QACfC,eAAe,EAAE,KAAK;QACtBC,YAAY,EAAE,IAAI;QAClBC,YAAY,EAAE,IAAI;QAClBC,SAAS,EAAE,IAAI;QACfC,QAAQ,EAAEC,SAAS;QACnBC,KAAK,EAAE;MACX,CAAC,CAAC;IACN,CAAC,MAAM;MACHzF,aAAa,CAAC+E,GAAG,CAAC;MAClBtB,OAAO,CAACC,GAAG,CAAC3D,UAAU,CAAC;MACvBD,UAAU,CAAC,IAAI,CAAC;IACpB;EACJ,CAAC;;EAED;EACA,MAAM4F,uBAAuB,GAAGA,CAAA,KAAM;IAClC,IAAInE,QAAQ,KAAK,UAAU,EAAE;MACzBtD,KAAK,CAAC+G,OAAO,CAAC,CAAC;MACf/G,KAAK,CAACuF,KAAK,CAAC,iCAAiC,EAAE;QAC3CyB,QAAQ,EAAE,YAAY;QACtBC,SAAS,EAAE,IAAI;QACfC,eAAe,EAAE,KAAK;QACtBC,YAAY,EAAE,IAAI;QAClBC,YAAY,EAAE,IAAI;QAClBC,SAAS,EAAE,IAAI;QACfC,QAAQ,EAAEC,SAAS;QACnBC,KAAK,EAAE;MACX,CAAC,CAAC;IACN,CAAC,MAAM,IAAI,CAACtF,UAAU,EAAE;MACpB,MAAMwF,gBAAgB,GAAG;QACrBnB,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB;MAClD,CAAC;MAED,MAAM7C,KAAK,GAAI,qEAAoET,SAAU,IAAGI,QAAS,EAAC;MAC1GM,KAAK,CAACD,KAAK,EAAE+D,gBAAgB,CAAC,CAC7B7D,IAAI,CAAC,MAAOC,QAAQ,IAAK;QACtB,MAAM6D,GAAG,GAAG,MAAM7D,QAAQ,CAACG,IAAI,CAAC,CAAC;QACjC,IAAI,CAACH,QAAQ,CAACC,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC2D,GAAG,CAACC,OAAO,CAAC;QAChC;QACA,OAAOD,GAAG;MACd,CAAC,CAAC,CACD9D,IAAI,CAAEH,IAAI,IAAK;QACZ,MAAMmE,IAAI,GAAG,CAACnE,IAAI,CAACoE,aAAa,CAACC,UAAU,EAAErE,IAAI,CAACoE,aAAa,CAACE,SAAS,EAAEtE,IAAI,CAACoE,aAAa,CAACG,MAAM,EAAEvE,IAAI,CAACoE,aAAa,CAACI,KAAK,EAAExE,IAAI,CAACoE,aAAa,CAACK,KAAK,EAAEzE,IAAI,CAACoE,aAAa,CAACM,kBAAkB,CAAC,CAAC,CAAC,CAAC;QACnMnG,UAAU,CAAC4F,IAAI,CAAC;QAChBrC,OAAO,CAACC,GAAG,CAACzD,OAAO,CAAC;QACpBa,oBAAoB,CAAC,IAAI,CAAC;QAC1BV,aAAa,CAAC,IAAI,CAAC;MACvB,CAAC,CAAC;IACN,CAAC,MAAM;MACHU,oBAAoB,CAAC,IAAI,CAAC;IAC9B;EACJ,CAAC;;EAED;EACA,MAAMwF,wBAAwB,GAAGA,CAAA,KAAM;IACnCxF,oBAAoB,CAAC,KAAK,CAAC;EAC/B,CAAC;EAGD,MAAMyF,mBAAmB,GAAGA,CAAA,KAAM;IAC9B,MAAMT,IAAI,GAAG;MACTtB,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/C+B,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBC,YAAY,EAAExF,SAAS;QACvByF,MAAM,EAAE7G,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;MAC3B,CAAC;IACL,CAAC;IAED,MAAM6B,KAAK,GAAG,iEAAiE;IAC/EC,KAAK,CAACD,KAAK,EAAEkE,IAAI,CAAC,CACjBhE,IAAI,CAAC,MAAOC,QAAQ,IAAK;MACtB,MAAM6D,GAAG,GAAG,MAAM7D,QAAQ,CAACG,IAAI,CAAC,CAAC;MACjC,IAAI,CAACH,QAAQ,CAACC,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC2D,GAAG,CAACC,OAAO,CAAC;MAChC;MACA,OAAOD,GAAG;IACd,CAAC,CAAC,CACD9D,IAAI,CAAEH,IAAI,IAAK;MACZ2E,wBAAwB,CAAC,CAAC;MAC1BtF,oBAAoB,CAAC,IAAI,CAAC;IAC9B,CAAC,CAAC,CACDuC,KAAK,CAAEC,KAAK,IAAK;MACd,MAAMqD,GAAG,GAAGrD,KAAK,CAACqC,OAAO;MACzB,IAAIgB,GAAG,CAACC,UAAU,CAAC,SAAS,CAAC,EAAE;QAC3BC,KAAK,CAACF,GAAG,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC;QACnB/I,KAAK,CAACuF,KAAK,CAACqD,GAAG,CAACG,KAAK,CAAC,CAAC,CAAC,EAAE;UACtB/B,QAAQ,EAAE,YAAY;UACtBC,SAAS,EAAE,IAAI;UACfC,eAAe,EAAE,KAAK;UACtBC,YAAY,EAAE,IAAI;UAClBC,YAAY,EAAE,IAAI;UAClBC,SAAS,EAAE,IAAI;UACfC,QAAQ,EAAEC,SAAS;UACnBC,KAAK,EAAE;QACX,CAAC,CAAC;MACN,CAAC,MAAM;QACHxH,KAAK,CAACuF,KAAK,CAACqD,GAAG,EAAE;UACb5B,QAAQ,EAAE,YAAY;UACtBC,SAAS,EAAE,IAAI;UACfC,eAAe,EAAE,KAAK;UACtBC,YAAY,EAAE,IAAI;UAClBC,YAAY,EAAE,IAAI;UAClBC,SAAS,EAAE,IAAI;UACfC,QAAQ,EAAEC,SAAS;UACnBC,KAAK,EAAE;QACX,CAAC,CAAC;MACN;IACJ,CAAC,CAAC;EAEN,CAAC;EAED,oBACIzG,OAAA;IAAKiI,SAAS,EAAG,cAAapH,OAAO,GAAG,iBAAiB,GAAG,EAAG,EAAE;IAAAqH,QAAA,gBAC7DlI,OAAA,CAACN,UAAU;MAACyI,eAAe,EAAEzF;IAAqB;MAAA0F,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrDvI,OAAA,CAACb,GAAG;MAAC8I,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC1BlI,OAAA;QAAKiI,SAAS,EAAC,iBAAiB;QAACO,KAAK,EAAE;UAAEC,UAAU,EAAE,MAAM;UAAEC,KAAK,EAAE;QAAQ,CAAE;QAAAR,QAAA,eAC3ElI,OAAA,CAACZ,UAAU;UAACoJ,KAAK,EAAE;YAACG,UAAU,EAAE,QAAQ;YAAEC,QAAQ,EAAE,MAAM;YAAEC,cAAc,EAAE,QAAQ;YAAEC,UAAU,EAAE,QAAQ;YAAEC,SAAS,EAAE;UAAO,CAAE;UAAAb,QAAA,EAAC;QAEjI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACNvI,OAAA,CAACb,GAAG;MAAC8I,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC1BlI,OAAA;QAAKwI,KAAK,EAAE;UAACQ,OAAO,EAAE,MAAM;UAAEH,cAAc,EAAE,QAAQ;UAAEC,UAAU,EAAE;QAAS,CAAE;QAAAZ,QAAA,gBAC3ElI,OAAA;UAAKwI,KAAK,EAAE;YAAEQ,OAAO,EAAE,MAAM;YAAEH,cAAc,EAAE,YAAY;YAAEH,KAAK,EAAE;UAAU,CAAE;UAAAR,QAAA,GAC1EvH,MAAM,eACRX,OAAA;YAAAkI,QAAA,eACIlI,OAAA,CAACP,IAAI;cAACY,OAAO,EAAEA,OAAQ;cAACC,UAAU,EAAEA,UAAW;cAACF,UAAU,EAAEA;YAAW;cAAAgI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eACNvI,OAAA,CAACX,OAAO;UAACqJ,KAAK,EAAC;QAAQ;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEL,CAAC,eACNvI,OAAA,CAACL,QAAQ;MAACQ,OAAO,EAAEA,OAAQ;MAACkB,IAAI,EAAEA,IAAK;MAACE,YAAY,EAAEA,YAAa;MAACuE,SAAS,EAAEA;IAAU;MAAAsC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC3FvI,OAAA;MAAKwI,KAAK,EAAE;QAAEQ,OAAO,EAAE,MAAM;QAAEH,cAAc,EAAE,QAAQ;QAAEI,OAAO,EAAE,IAAI;QAAEN,UAAU,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAO,CAAE;MAAAV,QAAA,eAC7GlI,OAAA,CAACV,UAAU;QAAC4J,KAAK,EAAExH,UAAW;QAACL,IAAI,EAAEA,IAAK;QAAC8H,QAAQ,EAAEA,CAACC,KAAK,EAAEC,KAAK,KAAK/H,OAAO,CAAC+H,KAAK,CAAE;QAAEpB,SAAS,EAAC;MAAmB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvH,CAAC,EACL1G,iBAAiB,iBAAK7B,OAAA,CAACH,kBAAkB;MAACyJ,IAAI,EAAEzH,iBAAkB;MAAC0H,OAAO,EAAEjC,wBAAyB;MAACkC,QAAQ,EAAEjC,mBAAoB;MAACtG,OAAO,EAAEA;IAAQ;MAAAmH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAE,EACzJxG,iBAAiB,iBAAK/B,OAAA,CAACJ,aAAa;MAAC0J,IAAI,EAAEvH,iBAAkB;MAACwH,OAAO,EAAEA,CAAA,KAAMvH,oBAAoB,CAAC,KAAK;IAAE;MAAAoG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAE,EAC7G1H,OAAO,iBAAKb,OAAA,CAACF,QAAQ;MAACwJ,IAAI,EAAEzI,OAAQ;MAAC0I,OAAO,EAAE1D,QAAS;MAACC,SAAS,EAAEA,SAAU;MAAC/E,UAAU,EAAEA,UAAW;MAACc,iBAAiB,EAAEA,iBAAkB;MAACE,iBAAiB,EAAEA,iBAAkB;MAAC0H,UAAU,EAAE/C;IAAwB;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1N,CAAC;AAEd;AAACrI,EAAA,CAzUeD,QAAQ;EAAA,QAwBHf,WAAW;AAAA;AAAAwK,EAAA,GAxBhBzJ,QAAQ;AAAA,IAAAyJ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}